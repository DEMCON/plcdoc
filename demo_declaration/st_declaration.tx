// Process complete declaration
Declaration:
    types*=TypeDef
    (function=Function)?
    CommentIgnored*
;

TypeDef:
    comment=CommentBlock?
    'TYPE' name=ID ('EXTENDS' extends=ID)? ':'
    (type=TypeStruct | options=TypeEnum)
    'END_TYPE'
;

TypeStruct:
    'STRUCT'
    properties*=Variable
    'END_STRUCT'
;

TypeEnum:
    '('
    values*=EnumOption
    ');'
;

EnumOption:
    name=ID
    (':=' INT)?
    ','?
;

Function:
    comment=CommentBlock?
    function_type=FunctionType name=ID ('EXTENDS' extends=ID)? (':' return=ID)?
    lists*=VariableList
;

FunctionType :
    'FUNCTION_BLOCK' | 'FUNCTION'
;

Listing :
    VariableList | CommentIgnored
;

VariableList:
    CommentIgnored*
    name=VariableType
    variables*=Variable
    'END_VAR'
    CommentIgnored*
;

VariableType:
    /VAR_.*/ | 'VAR'
;

// A single variable definition
Variable:
    CommentIgnored*
    name=ID ':' type=ID ';' comment=CommentDescription?
    CommentIgnored*
;

// The `Comment` clause is reserved, create a custom clause that won't be processed
CommentIgnored: /\/\/.*$/;

CommentDescription:
    '//' comment=/.*$/
;

CommentBlock[noskipws]:
    comment=/\(\*(.|\n)*\*\)/
;
